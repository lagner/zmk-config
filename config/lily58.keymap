/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


&mt {
    tapping-term-ms = <280>;
};

&lt {
    tapping-term-ms = <200>;
};

/ {
    macros {
        switch_lang: switch_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RALT &kp SPACE>;
            label = "SWITCH_LANG";
        };
    };

    behaviors {
        mt_tui: tap_unless_interrupted  {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC             &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                                      &kp N6  &kp N7  &kp N8         &kp N9   &kp N0    &tog 1
&kp TAB             &kp Q   &kp W   &kp E         &kp R   &kp T                                       &kp Y   &kp U   &kp I          &kp O    &kp P     &kp MINUS
&mt_tui LEFT_SHIFT TAB  &kp A   &kp S   &kp D         &kp F   &kp G                                       &kp H   &kp J   &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL           &kp Z   &kp X   &kp C         &kp V   &kp B             &kp BACKSPACE    &none    &kp N   &kp M   &kp COMMA      &kp DOT  &kp FSLH  &mt_tui RIGHT_SHIFT RIGHT_BRACKET
                                    &switch_lang  &mo 2   &kp LEFT_COMMAND  &lt 1 SPACE      &kp RET  &sl 2   &tog 2  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Utility {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&to 0   &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_CLR                               &kp F7          &kp F8           &kp F9         &kp F10           &kp F11  &kp F12
&trans  &kp TILDE     &kp EXCLAMATION       &kp AT_SIGN     &kp HASH       &kp DOLLAR                               &kp F1          &kp F2           &kp F3         &kp F4            &kp F5   &kp F6
&trans  &none         &kp PERCENT           &kp CARET       &kp AMPERSAND  &kp ASTERISK                             &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW   &kp RIGHT_ARROW   &none    &kp INSERT
&trans  &kp GRAVE     &kp LEFT_PARENTHESIS  &kp UNDERSCORE  &kp PLUS       &kp RIGHT_PARENTHESIS  &trans    &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LESS_THAN  &kp GREATER_THAN  &none    &kp CAPSLOCK
                                            &trans          &kp PERIOD     &trans                 &trans    &trans  &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Numeric {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&to 0   &trans        &trans        &trans          &trans                &trans                          &trans                 &trans           &trans        &trans           &trans         &kp DELETE
&trans  &kp GRAVE     &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3          &kp NUMBER_4                    &kp UNDERSCORE         &kp MINUS        &kp EQUAL     &kp PLUS         &kp BACKSLASH  &kp LESS_THAN
&trans  &kp ASTERISK  &kp NUMBER_5  &kp NUMBER_6    &kp NUMBER_7          &kp NUMBER_8                    &kp LEFT_ARROW         &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT_ARROW  &kp COLON      &kp DOUBLE_QUOTES
&trans  &kp PIPE      &kp NUMBER_9  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp NUMBER_0  &trans    &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp KP_COMMA  &kp KP_DOT       &kp QUESTION   &kp GREATER_THAN
                                    &kp KP_COMMA    &kp KP_DOT            &trans        &trans    &trans  &kp RSHIFT             &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
