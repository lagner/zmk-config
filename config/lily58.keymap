/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <280>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <280>;
    flavor = "hold-preferred";
};

/ {
    macros {
        switch_lang: switch_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RALT &kp SPACE>;
            label = "SWITCH_LANG";
        };
    };

    behaviors {
        mt_cmds: mt_cmds {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_CMDS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <340>;
            flavor = "balanced";
        };

        mt_zmk: mt_zmk {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_ZMK";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            flavor = "tap-preferred";
        };

        lt_cmds: lt_cmds {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_CMDS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <340>;
            flavor = "tap-preferred";
        };

        mt_shifts: mt_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SHIFTS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <260>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&to 0  &kp EXCLAMATION          &kp AT_SIGN          &kp HASH                 &kp DOLLAR               &kp PERCENT                                                        &kp CARET                   &kp AMPERSAND            &kp ASTERISK              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&none  &kp Q                    &kp W                &kp E                    &kp R                    &kp T                                                              &kp Y                       &kp U                    &kp I                     &kp O                 &kp P                  &none
&none  &kp A                    &mt_cmds LEFT_ALT S  &mt_cmds LEFT_COMMAND D  &mt_cmds LEFT_CONTROL F  &kp G                                                              &kp H                       &mt_cmds LEFT_CONTROL J  &mt_cmds RIGHT_COMMAND K  &mt_cmds RIGHT_ALT L  &kp SEMI               &none
&none  &mt_cmds LEFT_COMMAND Z  &kp X                &kp C                    &lt_cmds 1 V             &mt_zmk 3 B                   &kp BACKSPACE    &lt 4 SINGLE_QUOTE  &mt_zmk 3 N                 &lt_cmds 2 M             &kp COMMA                 &kp DOT               &kp FSLH               &none
                                                     &kp LEFT_BRACKET         &sl 1                    &mt_shifts LEFT_SHIFT ESCAPE  &lt 2 SPACE      &lt 1 ENTER         &mt_shifts RIGHT_SHIFT TAB  &switch_lang             &kp RIGHT_BRACKET
            >;
        };

        Utility {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&to 0   &none         &none                  &none            &none         &none                                       &none            &none          &none           &none             &none         &kp DELETE
&trans  &kp TILDE     &kp EQUAL              &kp EXCLAMATION  &kp AT_SIGN   &kp HASH                                    &kp LEFT_BRACE   &kp MINUS      &kp UNDERSCORE  &kp LESS_THAN     &trans        &trans
&trans  &kp CAPSLOCK  &kp RIGHT_PARENTHESIS  &kp DOLLAR       &kp PERCENT   &kp CARET                                   &kp LEFT_ARROW   &kp PAGE_DOWN  &kp PAGE_UP     &kp RIGHT_ARROW   &kp COLON     &kp DOUBLE_QUOTES
&trans  &caps_word    &kp PLUS               &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp DELETE    &trans  &kp RIGHT_BRACE  &kp PIPE       &kp BACKSLASH   &kp GREATER_THAN  &kp QUESTION  &trans
                                             &trans           &trans        &trans                &trans        &trans  &trans           &to 1          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>;
        };

        Numeric {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&to 0   &none            &none         &none         &trans        &bootloader                         &trans          &trans          &trans          &trans           &trans        &kp DELETE
&trans  &kp KP_DIVIDE    &kp PLUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3                        &kp TILDE       &kp MINUS       &kp UNDERSCORE  &none            &kp SLASH     &none
&trans  &kp KP_DOT       &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6                        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &kp COLON     &kp DOUBLE_QUOTES
&trans  &kp KP_MULTIPLY  &kp KP_MINUS  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans    &kp DELETE  &kp GRAVE       &kp PIPE        &kp KP_DOT      &kp RS(KP_DOT)   &kp QUESTION  &kp CAPSLOCK
                                       &trans        &to 2         &trans        &trans    &trans      &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Zmk {
            bindings = <
&soft_off    &bt BT_SEL 4   &bt BT_SEL 3    &bt BT_SEL 2   &bt BT_SEL 1       &bt BT_SEL 0                     &bt BT_SEL 0   &bt BT_SEL 1       &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   &soft_off
&trans       &bt BT_DISC 4  &bt BT_DISC 3   &bt BT_DISC 2  &bt BT_DISC 1      &bt BT_DISC 0                    &bt BT_DISC 0  &bt BT_DISC 1      &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  &none
&bootloader  &bootloader    &bt BT_CLR      &out OUT_BLE   &ext_power EP_ON   &trans                           &none          &ext_power EP_ON   &out OUT_BLE   &bt BT_CLR      &bootloader    &bootloader
&sys_reset   &sys_reset     &bt BT_CLR_ALL  &out OUT_USB   &ext_power EP_OFF  &trans         &trans    &trans  &trans         &ext_power EP_OFF  &out OUT_USB   &bt BT_CLR_ALL  &sys_reset     &sys_reset
                                            &trans         &trans             &trans         &trans    &trans  &trans         &trans             &trans
            >;
        };

        Advanced {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                               &kp F7             &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_UP                      &kp C_VOLUME_UP    &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &kp C_MUTE                           &kp C_MUTE         &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN  &trans    &trans  &kp C_VOLUME_DOWN  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans             &trans    &trans  &trans             &trans  &trans
            >;
        };
    };
};

